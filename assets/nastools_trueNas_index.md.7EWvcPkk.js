import{_ as s,c as i,o as e,ae as t}from"./chunks/framework.DtxlzkAV.js";const c=JSON.parse('{"title":"TrueNas Scale","description":"","frontmatter":{"sidebar":"auto"},"headers":[],"relativePath":"nastools/trueNas/index.md","filePath":"nastools/trueNas/index.md"}'),l={name:"nastools/trueNas/index.md"};function n(h,a,p,r,d,o){return e(),i("div",null,[...a[0]||(a[0]=[t('<h1 id="truenas-scale" tabindex="-1">TrueNas Scale <a class="header-anchor" href="#truenas-scale" aria-label="Permalink to &quot;TrueNas Scale&quot;">​</a></h1><h2 id="jlmkr" tabindex="-1">jlmkr <a class="header-anchor" href="#jlmkr" aria-label="Permalink to &quot;jlmkr&quot;">​</a></h2><p>创建监狱 jlmkr create JAILNAME</p><p>开始监狱 jlmkr start JAILNAME</p><p>停止监狱 jlmkr stop JAILNAME</p><p>检查监狱状态 jlmkr status JAILNAME</p><p>删除监狱并删除其文件（需要确认） jlmkr remove JAILNAME</p><p>查看监狱列表（包括正在运行、未运行、发行版、启动状态和 IP） jlmkr list</p><p>查看正在运行的监狱列表 machinectl list</p><p>从 TrueNAS shell 在监狱内执行命令 jlmkr exec JAILNAME COMMAND</p><p>从 TrueNAS shell 在监狱内执行 bash 命令 jlmkr exec JAILNAME bash -c &#39;BASHCOMMAND&#39;</p><p>切换到监狱的外壳 machinectl shell JAILNAME machinectl shell myjail</p><p>查看监狱的日志 jlmkr log JAILNAME</p><p>编辑监狱的配置 jlmkr edit JAILNAME</p><h3 id="说明" tabindex="-1">说明 <a class="header-anchor" href="#说明" aria-label="Permalink to &quot;说明&quot;">​</a></h3><p>使用<code>jlmkr list</code>查看正在运行的 jail,比如<code>myjail</code> 使用<code>machinectl shell myjail</code>进入<code>myjail</code> 切换到监狱之后先安装组件</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> update</span></span>\n<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nano</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> wget</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> git</span></span></code></pre></div><p>然后就可以正常运行 debian 命令安装 docker</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /tmp</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -fsSL</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://get.docker.com</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get-docker.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> sh</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> get-docker.sh</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span></span></code></pre></div><h3 id="链接" tabindex="-1">链接 <a class="header-anchor" href="#链接" aria-label="Permalink to &quot;链接&quot;">​</a></h3><p><a href="https://github.com/Jip-Hop/jailmaker/blob/main/docs" target="_blank" rel="noreferrer">https://github.com/Jip-Hop/jailmaker/blob/main/docs</a></p><h3 id="关于挂载目录" tabindex="-1">关于挂载目录 <a class="header-anchor" href="#关于挂载目录" aria-label="Permalink to &quot;关于挂载目录&quot;">​</a></h3><p>--bind 添加到 systemd_nspawn_default_args= 最后即可</p><p>PS 按照道理 systemd_nspawn_user_args 和 systemd_nspawn_default_args 相同，但是 systemd_nspawn_default_args 比较有效</p><h3 id="例子" tabindex="-1">例子 <a class="header-anchor" href="#例子" aria-label="Permalink to &quot;例子&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>--bind=&#39;/homePath:/jailPath&#39;</span></span></code></pre></div><h3 id="备注" tabindex="-1">备注 <a class="header-anchor" href="#备注" aria-label="Permalink to &quot;备注&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>--bind=&#39;/mnt/data/docker/:/jail/docker&#39; --bind=&#39;/mnt/data/vcloud/:/home/vcloud&#39;</span></span></code></pre></div><h3 id="关于权限问题-会碰到-permission-denied-you-must-be-root" tabindex="-1">关于权限问题，会碰到 Permission denied (you must be root) <a class="header-anchor" href="#关于权限问题-会碰到-permission-denied-you-must-be-root" aria-label="Permalink to &quot;关于权限问题，会碰到 Permission denied (you must be root)&quot;">​</a></h3><p>添加 systemd_nspawn_default_args 部分<code>--capability=all</code></p><h3 id="error-setting-interface-ipv6-to-nil" tabindex="-1">error setting interface IPv6 to <code>&lt;nil&gt;</code> <a class="header-anchor" href="#error-setting-interface-ipv6-to-nil" aria-label="Permalink to &quot;error setting interface IPv6 to `&lt;nil&gt;`&quot;">​</a></h3><p>docker 大于 26.0.2 的版本会尝试设置 ipv6，但是 trueNas 并不能设置 net，请安装 26.0.1 版本的 docker 27 版本可以直接创建启用 v6 的网络，启用 v6 可能就不会去尝试禁用 v6 导致出错了 ···But, it&#39;s easier to create a docker network with IPv6 enabled, so that it doesn&#39;t need to be disabled on IPv4- only interfaces. It&#39;s now just --ipv6 in the network create command, or enable_ipv6: true in compose. ···</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">apt-get</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-ce=5:26.0.1-1~debian.12~bookworm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-ce-cli=5:26.0.1-1~debian.12~bookworm</span></span></code></pre></div>',33)])])}const m=s(l,[["render",n]]);export{c as __pageData,m as default};
